{"version":3,"sources":["qiniu-mini-program.esm.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"qiniu-mini-program\"] = factory();\n\telse\n\t\troot[\"qiniu-mini-program\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */,\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\n__webpack_require__.r(__webpack_exports__);\n/**\r\n * 针对微信小程序、Vue、Taro、ES6写法的七牛云上传图片或者视频js包\r\n * 详细使用看README.md即可\r\n */\r\n let config = {\r\n  /**\r\n   * bucket 所在区域。ECN, SCN, NCN, NA, ASG，ECNZ分别对应七牛云的\r\n   * 华东，华东浙2，华南，华北，北美，新加坡 6 个区域，后续新增的话再补充\r\n   */\r\n  qiniuRegion: '',\r\n  /**\r\n   * 七牛云bucket 外链前缀，外链在下载资源时用到 图片的下载域名前缀 http(s)://xxxx等\r\n   */\r\n  qiniuBucketURLPrefix: '',\r\n  /**\r\n   * 获取upToken方法二选一即可，执行优先级为：upToken > upTokenUrl\r\n   * 二选一，推荐使用 qiniuUploadToken 外部传入token方式最好，详情请见 README.md\r\n   */\r\n  qiniuUploadToken: '',\r\n  /**\r\n   * 自己的请求token的服务地址，从指定 url 通过 HTTP GET 获取 upToken\r\n   * 返回的格式必须是 json 且包含 upToken 字段，例如： {\"upToken\": \"0MLvWPnyy...\"}\r\n   */\r\n  qiniuUploadTokenUrl: ''\r\n}\r\n/**\r\n * 是否已经初始化过 正常只会初始化一次 假如token过期则需要再刷一次\r\n */\r\nlet configBool = false;\r\n/**\r\n * 七牛云配置初始化\r\n */\r\nfunction setConfig(options) {\r\n  configBool = true\r\n  if (!options || !options.region) {\r\n    return Promise.reject('qiniu config params error')\r\n  }\r\n  const keys = {\r\n    'region': 'qiniuRegion',\r\n    'upToken': 'qiniuUploadToken',\r\n    'upTokenUrl': 'qiniuUploadTokenUrl',\r\n    'domain': 'qiniuBucketURLPrefix'\r\n  }\r\n  Object.keys(options).forEach(k => {\r\n    keys[k] && (config[keys[k]] = options[k] || '')\r\n  })\r\n  return Promise.resolve()\r\n}\r\n/**\r\n * 选择七牛云文件上传接口，文件向匹配的接口中传输。\r\n * ECN, SCN, NCN, NA, ASG，ECNZ分别对应七牛云的：华东，华东浙2，华南，华北，北美，新加坡。6个区域\r\n * 新增的区域自行添加就行\r\n */\r\n function uploadURLFromRegionCode(code) {\r\n  const map = new Map([\r\n    ['ECN', 'https://upload.qiniup.com'],\r\n    ['ECNZ', 'https://upload-cn-east-2.qiniup.com'],\r\n    ['NCN', 'https://upload-z1.qiniup.com'],\r\n    ['SCN', 'https://upload-z2.qiniup.com'],\r\n    ['NA', 'https://upload-na0.qiniup.com'],\r\n    ['ASG', 'https://upload-as0.qiniup.com']\r\n  ])\r\n  if (!map.has(code)) return Promise.reject('region code empty')\r\n  return Promise.resolve(map.get(code))\r\n}\r\n/**\r\n * 二种方式获取token \r\n */\r\n function getToken() {\r\n  return new Promise(async (resolve, reject) => {\r\n    // 第一种 直接赋值token\r\n    if (config.qiniuUploadToken) {\r\n      return resolve()\r\n    }\r\n    // 第二种 方法内request获取token\r\n    if (config.qiniuUploadTokenUrl) {\r\n      await getQiniuToken()\r\n      return resolve()\r\n    }\r\n    reject('qiniu uploader need upToken or upTokenUrl');\r\n  })\r\n}\r\n/**\r\n * 正式上传的前置方法，做预处理，初始化七牛云配置\r\n * filePath：上传的文件本地路径，options：初始化参数，update：是否需要更新初始化参数，\r\n * progress：上传进度函数，cancelTask：取消上传任务\r\n */\r\nfunction upload({ filePath, options, update = false, progress, cancelTask }) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (!filePath) {\r\n        return reject('filePath is null');\r\n      }\r\n      if (options && (!configBool || update)) {\r\n        await setConfig(options)\r\n      }\r\n      await getToken()\r\n      const r = await doUpload({ filePath, options, progress, cancelTask });\r\n      resolve(r)\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n/**\r\n * 执行上传函数\r\n */\r\nfunction doUpload({ filePath, options, progress, cancelTask }) {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (!config.qiniuUploadToken) {\r\n      return reject('qiniu uploadToken is null, please check the init config or networking');\r\n    }\r\n    const url = await uploadURLFromRegionCode(config.qiniuRegion);\r\n    let fileName = filePath.split('//')[1];\r\n    // 自定义上传key（即自定义上传文件名）。通过修改qiniuUploader.upload方法传入的options参数，可以进行自定义文件名称。\r\n    // 如果options非空，则使用options中的key作为fileName\r\n    if (options && options.key) fileName = options.key;\r\n    let formData = { 'token': config.qiniuUploadToken };\r\n    // qiniuShouldUseQiniuFileName 如果是 true，则文件的 key 由 qiniu 服务器分配（全局去重）。\r\n    // 如果是 false，则文件的 key 使用微信自动生成的 filename。出于初代sdk用户升级后兼容问题的考虑，默认是 false。\r\n    if (!config.qiniuShouldUseQiniuFileName) { formData['key'] = fileName };\r\n    const uploadTask = wx.uploadFile({\r\n      url: url,\r\n      filePath,\r\n      name: 'file',\r\n      formData,\r\n      success: (res) => {\r\n        try {\r\n          if (res.statusCode !== 200) return reject(res);\r\n          const dataString = res.data;\r\n          const dataObject = JSON.parse(dataString);\r\n          // 拼接fileURL 不管是qiniuShouldUseQiniuFileName true还是false 都需要拼接\r\n          dataObject.imageUrl = `${config.qiniuBucketURLPrefix}/${dataObject.key}`;\r\n          resolve(dataObject);\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        reject(error);\r\n      }\r\n    })\r\n    // 文件上传进度\r\n    uploadTask.onProgressUpdate((res) => {\r\n      progress && progress(res);\r\n    })\r\n    // 中断文件上传\r\n    cancelTask && cancelTask(() => {\r\n      uploadTask.abort();\r\n    })\r\n  })\r\n}\r\n/**\r\n * 获取七牛云upToken, url为后端服务器获取七牛云upToken接口\r\n * 这种形式接口返回参数格式必须严格按照下面来\r\n * data: { upToken: '32131232', domain: 'http(s)://xxxx', region: 'ECN' }\r\n */\r\nfunction getQiniuToken() {\r\n  return new Promise((resolve, reject) => {\r\n    wx.request({\r\n      url: config.qiniuUploadTokenUrl,\r\n      success: (res) => {\r\n        const token = res.data.upToken;\r\n        if (token && token.length > 0) {\r\n          config.qiniuUploadToken = token;\r\n          config.qiniuBucketUrlPreFix = res.data.domain;\r\n          config.qiniuRegion = res.data.region;\r\n          return resolve()\r\n        }\r\n        reject('qiniuUploader cannot get your token, please check the upTokenUrl or server')\r\n      },\r\n      fail: (error) => {\r\n        reject('qiniu UploadToken is null, please check the init config or networking: ' + error)\r\n      }\r\n    })\r\n  })\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  setConfig,\r\n  upload\r\n});\r\n\n\n/***/ })\n/******/ ])[\"default\"];\n});"]}